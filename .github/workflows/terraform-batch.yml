name: Terraform Batch

on: workflow_dispatch

env:
  TF_VERSION: 0.15.3
  KEYCLOAK_DEV_URL: https://dev.oidc.gov.bc.ca
  KEYCLOAK_TEST_URL: https://test.oidc.gov.bc.ca
  KEYCLOAK_PROD_URL: https://oidc.gov.bc.ca

jobs:
  terraform:
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    env:
      API_URL: ${{ secrets.WEBAPP_API_URL }}
    steps:
    - uses: hmarr/debug-action@v2
    - uses: actions/checkout@v2

    - name: Wake Up API
      uses: fjogeleit/http-request-action@master
      with:
        url: ${{ env.API_URL }}/heartbeat
        method: GET
        customHeaders: '{"Authorization": "${{ secrets.GH_SECRET }}"}'
        timeout: '60000'
      continue-on-error: true

    - name: Fetch Requests Count
      id: requests
      uses: fjogeleit/http-request-action@master
      with:
        url: ${{ env.API_URL }}/batch/items/silver
        method: GET
        customHeaders: '{"Authorization": "${{ secrets.GH_SECRET }}"}'
        timeout: '60000'

    - name: Get Requests Count
      id: count
      run: |
        count=$(jq length <<< ${{ steps.requests.outputs.response }})
        echo "$count"
        echo "::set-output name=count::$count"

    - name: Pull the main branch again
      if: steps.count.outputs.count != '0'
      run: |
        git pull origin main --rebase

    - name: Setup Terraform
      if: steps.count.outputs.count != '0'
      id: tf
      uses: bcgov/sso-requests-actions/actions/setup-terraform@v0.48.0
      with:
        context: ./terraform
        tf-version: ${{ env.TF_VERSION }}
        tf-s3-bucket: xgr00q-prod-keycloak
        tf-s3-bucket-key: keycloak/silver
        tf-s3-dynamodb-table: xgr00q-prod-state-locking
        tf-s3-access-key: ${{ secrets.TF_S3_ACCESS_KEY }}
        tf-s3-secret-key: ${{ secrets.TF_S3_SECRET_KEY }}
        tf-s3-role-arn: ${{ secrets.TF_S3_ROLE_ARN }}
        kc-dev-url: ${{ env.KEYCLOAK_DEV_URL }}
        kc-test-url: ${{ env.KEYCLOAK_TEST_URL }}
        kc-prod-url: ${{ env.KEYCLOAK_PROD_URL }}
        kc-dev-secret: ${{ secrets.KEYCLOAK_DEV_CLIENT_SECRET }}
        kc-test-secret: ${{ secrets.KEYCLOAK_TEST_CLIENT_SECRET }}
        kc-prod-secret: ${{ secrets.KEYCLOAK_PROD_CLIENT_SECRET }}
        apply: true
      continue-on-error: true

    - name: Setup NPM Packages
      if: steps.count.outputs.count != '0'
      uses: bcgov/sso-requests-actions/actions/setup-yarn@v0.48.0

    - name: Update Requests Status
      if: steps.count.outputs.count != '0'
      uses: fjogeleit/http-request-action@master
      with:
        url: ${{ env.API_URL }}/batch/items
        method: PUT
        data: "{\"ids\": ${{ steps.requests.outputs.response }}, \"success\": \"${{ steps.tf.outputs.apply != 'failure' }}\"}"
        customHeaders: '{"Authorization": "${{ secrets.GH_SECRET }}"}'
        timeout: '60000'

    - name: Set Failure Code
      if: steps.tf.outputs.apply == 'failure'
      run: exit 1
