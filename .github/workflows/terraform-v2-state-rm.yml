name: Terraform V2 State Remove

on:
  workflow_dispatch:
    inputs:
      resource_address:
        description: Resource Address
        required: true

env:
  TF_VERSION: 1.1.4
  TFC_WORKSPACE: xgr00q-prod-keycloak-v2
  KEYCLOAK_V2_DEV_URL: https://dev.loginproxy.gov.bc.ca
  KEYCLOAK_V2_TEST_URL: https://test.loginproxy.gov.bc.ca
  KEYCLOAK_V2_PROD_URL: https://loginproxy.gov.bc.ca

jobs:
  terraform:
    runs-on: ubuntu-18.04
    steps:
      - uses: hmarr/debug-action@v2
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./terraform-v2

      - name: Terraform Variables
        run: |
          cat >"versions.tf" <<EOF
          terraform {
            backend "remote" {
              hostname     = "app.terraform.io"
              organization = "bcgov"
              workspaces {
                name = "${{ env.TFC_WORKSPACE }}"
              }
            }
          }
          EOF

          cat >"ci.auto.tfvars" <<EOF
          dev_keycloak_url="${{ env.KEYCLOAK_V2_DEV_URL }}"
          test_keycloak_url="${{ env.KEYCLOAK_V2_TEST_URL }}"
          prod_keycloak_url="${{ env.KEYCLOAK_V2_PROD_URL }}"
          dev_client_secret="${{ secrets.KEYCLOAK_V2_DEV_CLIENT_SECRET }}"
          test_client_secret="${{ secrets.KEYCLOAK_V2_TEST_CLIENT_SECRET }}"
          prod_client_secret="${{ secrets.KEYCLOAK_V2_PROD_CLIENT_SECRET }}"
          test_siteminder_signing_certificate="${{ secrets.TEST_SITEMINDER_SIGNING_CERTIFICATE }}"
          prod_siteminder_signing_certificate="${{ secrets.PROD_SITEMINDER_SIGNING_CERTIFICATE }}"
          EOF
        working-directory: ./terraform-v2

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform-v2

        # see https://www.terraform.io/cli/commands/state/rm
      - name: Terraform State Remove
        id: destroy
        run: |
          address=${{ github.event.inputs.resource_address }}
          echo "$address"
          terraform state rm "$address"
        working-directory: ./terraform-v2
