name: Test E2E

on: push

jobs:
  e2e:
    runs-on: ubuntu-18.04
    env:
      KEYCLOAK_URL: http://localhost:8080
      KEYCLOAK_USERNAME: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      APP_URL: http://localhost:3000
      KEYCLOAK_REALM: onestopauth
      KEYCLOAK_CLIENT_ID: test-client
      KEYCLOAK_CLIENT_SECRET: Pa55w0rd
    steps:
      - uses: actions/checkout@v2

      # NPM PACKAGES
      - uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install Yarn dependencies in root
        run: yarn
      - name: Install Yarn dependencies in next-app
        run: yarn
        working-directory: ./examples/next-app

      # ASDF TOOLS
      - name: Install asdf
        uses: asdf-vm/actions/setup@v1
      - name: Cache tools
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.asdf
          key: ${{ runner.os }}-${{ hashFiles('**/.tool-versions') }}
      - name: Install required tools
        run: |
          cat .tool-versions | cut -f 1 -d ' ' | xargs -n 1 asdf plugin-add || true
          asdf plugin-update --all
          asdf install
          asdf reshim

      # Keycloak
      - name: Run local Keycloak instance
        env:
          GH_OAUTH_CLIENT_ID: ${{ secrets.CI_GH_OAUTH_CLIENT_ID }}
          GH_OAUTH_CLIENT_SECRET: ${{ secrets.CI_GH_OAUTH_CLIENT_SECRET }}
        run: |
          docker-compose -f dockerfiles/keycloak-postgres.yml up -d
          node_modules/.bin/wait-on $KEYCLOAK_URL --timeout 120000
          node scripts/e2e-prep.js

      # Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Add Realm test client
        run: |
          ./add-client.sh "$KEYCLOAK_REALM" "$KEYCLOAK_CLIENT_ID" --dev --ci
        working-directory: ./bin
      - name: Run Terraform
        run: |
          terraform init
          terraform apply -auto-approve -var="keycloak_url=$KEYCLOAK_URL" -var="username=$KEYCLOAK_USERNAME" -var="password=$KEYCLOAK_PASSWORD"
        working-directory: ./terraform/keycloak-dev

      # NodeJS APP & Cypress
      - name: Run local app & e2e tests
        env:
          CYPRESS_APP_URL: ${{ env.APP_URL }}
          CYPRESS_GH_USERNAME: ${{ secrets.CI_GH_USERNAME }}
          CYPRESS_GH_PASSWORD: ${{ secrets.CI_GH_PASSWORD }}
        run: |
          yarn dev & yarn wait-on $APP_URL --timeout 60000
          yarn cypress run
        working-directory: ./examples/next-app

      # Cypress Arifacts
      - name: Store Cypress artifacts
        if: github.ref == 'refs/heads/master'
        env:
          GH_USERNAME: ${{ secrets.CI_GH_USERNAME }}
          CYPRESS_VIDEOS: /home/runner/work/sso_terraform/sso_terraform/examples/next-app/cypress/videos
        run: |
          rm -rf .git
          cd "$CYPRESS_VIDEOS"
          cat >"$CYPRESS_VIDEOS/index.html" <<EOF
          <!DOCTYPE html><html><body>
          <style>
            video {
              width: 90%    !important;
              height: auto  !important;
            }
          </style>
          <video controls autoplay muted>
            <source src="actions.spec.js.mp4" type="video/mp4">
            Your browser does not support the video tag.
          </video>
          </body></html>
          EOF
          git init
          git config user.name "$GH_USERNAME"
          git config user.email "$GH_USERNAME@users.noreply.github.com"
          git config commit.gpgsign false
          git add .
          git commit -m "initial commit"
          git branch -M cypress/artifacts
          git remote add origin "https://$GH_USERNAME:${{ secrets.CI_GITHUB_TOKEN }}@github.com/bcgov/sso_terraform.git"
          git push -uf origin cypress/artifacts
